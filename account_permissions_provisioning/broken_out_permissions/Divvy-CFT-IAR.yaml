#CFT for creating an instance role to be used with your DivvyCloud instances. This is for the local account (not an
#external account that is being assumed into)
#https://docs.divvycloud.com/docs/instance-assume-role-aws
---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates an instance role to allow the DivvyCloud instance to collect data about this account and assume roles into other accounts for data collection.
Parameters: 
  TypeOfUser: 
    Type: String
    Default: Standard User
    AllowedValues: 
      - Standard User
      - Power User
    Description: Type of permissions to give (Standard for readonly, Power for read/write)
  EDHPermissions:
    Type: String
    Default: None
    AllowedValues:
      - None
      - Consumer
      - Producer
    Description: Permissions to enable DivvyCloud to configure Event Driven Harvesting (EDH)

Conditions:
  AddStandardUser: !Equals [ !Ref TypeOfUser, "Standard User" ]
  AddPowerUser: !Equals [ !Ref TypeOfUser, "Power User" ]
  AddEDHConsumer: !Equals [ !Ref EDHPermissions, "Consumer" ]
  AddEDHProducer: !Equals [ !Ref EDHPermissions, "Producer" ]  

Resources:
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref Role
      InstanceProfileName: DivvyCloudInstanceProfile

  PolicyCloudcwPutMetricLogs:
    Condition: AddStandardUser
    DependsOn:
      - Role
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: DivvyCloud-CloudWatchPutMetricLogs-Policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action: 
              - cloudwatch:PutMetricData
              - logs:CreateLogGroup
            Resource: "*"
          -
            Effect: Allow
            Action: 
              - logs:PutLogEvents
              - logs:CreateLogStream
            Resource: !Join [ '', [ "arn:aws:logs:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":log-group:DivvyCloud-EC2:log-stream:*" ] ]
      Roles:
        - Ref: Role      

  PolicyEDHConsumer:
    Type: AWS::IAM::ManagedPolicy
    Condition: AddEDHConsumer
    Properties:
      ManagedPolicyName: DivvyCloudEDHConsumer
      Roles:
      - Ref: Role
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - events:DeleteRule
          - events:DescribeEventBus
          - events:DescribeRule
          - events:PutPermission
          - events:PutRule
          - events:PutTargets
          - events:RemoveTargets
          - iam:GetPolicy
          - iam:GetPolicyVersion
          - iam:GetRole
          - iam:ListPolicies
          - iam:ListPolicyVersions
          - organizations:DescribeOrganization
          - sqs:ListQueues
          - sqs:CreateQueue
          - sqs:DeleteQueue
          - sqs:ReceiveMessage
          - sqs:SetQueueAttributes
          - sqs:DeleteMessage
          - sqs:DeleteMessageBatch
          Effect: Allow
          Resource: "*"
      
  PolicyEDHProducer:
    Type: AWS::IAM::ManagedPolicy
    Condition: AddEDHProducer
    Properties:
      ManagedPolicyName: DivvyCloudEDHProducer
      Roles:
      - Ref: Role
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - events:DeleteRule
          - events:DescribeRule
          - events:PutRule
          - events:PutTargets
          - events:RemoveTargets
          - iam:CreatePolicyVersion
          - iam:GetPolicy
          - iam:GetPolicyVersion
          - iam:GetRole
          - organizations:DescribeOrganization
          Effect: Allow
          Resource: "*"
        - Effect: Allow
          Action:
          - iam:CreateRole
          - iam:AttachRolePolicy
          - iam:PassRole
          Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/service-role/event-driven-harvest/*eventbus-role'
        - Effect: Allow
          Action:
          - iam:CreatePolicy
          - iam:CreatePolicyVersion
          - iam:DeletePolicyVersion
          Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/service-role/event-driven-harvest/*eventbus-policy'

  PolicyPowerUser:
    Type: AWS::IAM::ManagedPolicy
    Condition: AddPowerUser
    Properties:
      ManagedPolicyName: DivvyCloud-PowerUser-Policy
      Roles:
      - Ref: Role
      PolicyDocument:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: s3://get.divvycloud.com/policies/PowerUserPolicy.json
            
  PolicyReadOnly1:
    Type: AWS::IAM::ManagedPolicy
    Condition: AddStandardUser
    Properties:
      ManagedPolicyName: DivvyCloud-StandardUser-Policy1
      Roles:
      - Ref: Role
      PolicyDocument:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: s3://get.divvycloud.com/policies/ReadOnlyPolicy1.json

  PolicyReadOnly2:
    Type: AWS::IAM::ManagedPolicy
    Condition: AddStandardUser
    Properties:
      ManagedPolicyName: DivvyCloud-StandardUser-Policy2
      Roles:
      - Ref: Role
      PolicyDocument:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: s3://get.divvycloud.com/policies/ReadOnlyPolicy2.json

  PolicyReadOnly3:
    Type: AWS::IAM::ManagedPolicy
    Condition: AddStandardUser
    Properties:
      ManagedPolicyName: DivvyCloud-StandardUser-Policy3
      Roles:
      - Ref: Role
      PolicyDocument:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: s3://get.divvycloud.com/policies/ReadOnlyPolicy3.json

  PolicySTS:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DivvyCloud-STS-Policy
      Roles:
      - Ref: Role
      PolicyDocument:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: s3://get.divvycloud.com/policies/STSPolicy.json

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"

Outputs:
  RoleARNID:
    Description: Your Role ARN ID
    Value:
      Fn::GetAtt:
      - Role
      - Arn